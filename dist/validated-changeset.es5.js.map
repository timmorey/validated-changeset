{"version":3,"file":"validated-changeset.es5.js","sources":["../src/utils/is-object.ts","../src/-private/change.ts","../src/-private/err.ts","../src/utils/get-key-values.ts","../src/utils/is-promise.ts","../src/utils/handle-multiple-validations.ts","../src/utils/get-deep.ts","../src/utils/validator-lookup.ts","../src/-private/notifier.ts","../src/-private/evented.ts","../src/utils/has-key.ts","../src/utils/normalize-object.ts","../src/utils/has-changes.ts","../src/utils/assign.ts","../src/utils/flatten-validations.ts","../src/utils/is-changeset.ts","../src/utils/key-in-object.ts","../src/utils/array-object.ts","../src/utils/set-deep.ts","../src/utils/merge-nested.ts","../src/utils/build-old-values.ts","../src/utils/merge-deep.ts","../src/utils/object-tree-node.ts","../src/utils/object-without.ts","../src/utils/take.ts","../src/validated.ts","../src/index.ts"],"sourcesContent":["export default function isObject<T>(val: T): boolean {\n  return (\n    val !== null &&\n    typeof val === 'object' &&\n    !(val instanceof Date || val instanceof RegExp) &&\n    !Array.isArray(val)\n  );\n}\n","/* import { IChange } from '../types'; */\nimport isObject from '../utils/is-object';\n\nexport const VALUE = Symbol('__value__');\n\nexport default class Change {\n  [VALUE]: unknown;\n\n  constructor(value: unknown) {\n    this[VALUE] = value;\n  }\n}\n\n// TODO: not sure why this function type guard isn't working\nexport const isChange = (maybeChange: unknown): maybeChange is Change =>\n  isObject(maybeChange) && VALUE in (maybeChange as any);\n\nexport function getChangeValue(maybeChange: Change | unknown): any {\n  if (isChange(maybeChange)) {\n    return maybeChange[VALUE];\n  }\n}\n","import type { IErr, ValidationErr } from '../types';\n\nexport default class Err implements IErr<any> {\n  value: any;\n  validation: ValidationErr | ValidationErr[];\n\n  constructor(value: any, validation: ValidationErr | ValidationErr[]) {\n    this.value = value;\n    this.validation = validation;\n  }\n}\n","import { getChangeValue, isChange } from '../-private/change';\nimport isObject from './is-object';\nimport Err from '../-private/err';\nimport type { PublicErrors } from '../types';\n\n/**\n * traverse through target and return leaf nodes with `value` property and key as 'person.name'\n * Only detects key paths with Changes\n *\n * @method getKeyValues\n * @return {Array} [{ 'person.name': value }]\n */\nexport function getKeyValues<T extends Record<string, any>>(\n  obj: T,\n  keysUpToValue: Array<string> = []\n): Record<string, any>[] {\n  const map = [];\n\n  for (let key in obj) {\n    if (obj[key] && isObject(obj[key])) {\n      if (isChange(obj[key])) {\n        map.push({ key: [...keysUpToValue, key].join('.'), value: getChangeValue(obj[key]) });\n      } else {\n        map.push(...getKeyValues(obj[key], [...keysUpToValue, key]));\n      }\n    }\n  }\n\n  return map;\n}\n\n/**\n * traverse through target and return leaf nodes with `value` property and key as 'person.name'\n *\n * @method getKeyErrorValues\n * @return {Array} [{ key: 'person.name', validation: '', value: '' }]\n */\nexport function getKeyErrorValues<T extends Record<string, any>>(\n  obj: T,\n  keysUpToValue: Array<string> = []\n): PublicErrors {\n  let map = [];\n\n  for (let key in obj) {\n    if (obj[key] && isObject(obj[key])) {\n      if (\n        Object.prototype.hasOwnProperty.call(obj[key], 'value') &&\n        (obj[key] as any) instanceof Err\n      ) {\n        map.push({\n          key: [...keysUpToValue, key].join('.'),\n          validation: obj[key].validation,\n          value: obj[key].value\n        });\n      } else if (key !== 'value') {\n        map.push(...getKeyErrorValues(obj[key], [...keysUpToValue, key]));\n      }\n    }\n  }\n\n  return map;\n}\n","import isObject from './is-object';\n\nfunction isPromiseLike(obj: any): boolean {\n  return (\n    !!obj &&\n    !!obj.then &&\n    !!obj.catch &&\n    !!obj.finally &&\n    typeof obj.then === 'function' &&\n    typeof obj.catch === 'function' &&\n    typeof obj.finally === 'function'\n  );\n}\n\nexport default function isPromise(obj: any): boolean {\n  return isObject(obj) && isPromiseLike(obj);\n}\n","import isPromise from './is-promise';\nimport type { ValidatorMapFunc, ValidationResult, ValidatorClass } from '../types';\n\n/**\n * Rejects `true` values from an array of validations. Returns `true` when there\n * are no errors, or the error object if there are errors.\n *\n * @private\n * @param  {Array} validations\n * @return {Promise<boolean|Any>}\n */\nasync function handleValidationsAsync(\n  validations: Array<ValidationResult | Promise<ValidationResult>>\n): Promise<any> {\n  try {\n    const result = await Promise.all(validations);\n\n    const maybeFailed = result.filter((val) => typeof val !== 'boolean' && val);\n    return maybeFailed.length === 0 || maybeFailed;\n  } catch (e) {\n    return e;\n  }\n}\n\n/**\n * Rejects `true` values from an array of validations. Returns `true` when there\n * are no errors, or the error object if there are errors.\n *\n * @private\n * @param  {Array} validations\n * @return {boolean|Any}\n */\nfunction handleValidationsSync(validations: Array<ValidationResult>): boolean | any {\n  const maybeFailed = validations.filter((val) => typeof val !== 'boolean' && val);\n  return maybeFailed.length === 0 || maybeFailed;\n}\n/**\n * Handles an array of validators and returns Promise.all if any value is a\n * Promise.\n *\n * @public\n * @param  {Array} validators Array of validator functions\n * @param  {String} options.key\n * @param  {Any} options.newValue\n * @param  {Any} options.oldValue\n * @param  {Object} options.changes\n * @param  {Object} options.content\n * @return {Promise|boolean|Any}\n */\nexport default function handleMultipleValidations(\n  validators: Array<ValidatorMapFunc | ValidatorClass>,\n  { key, newValue, oldValue, changes, content }: { [s: string]: any }\n): boolean | any {\n  let validations: Array<ValidationResult | Promise<ValidationResult>> = Array.from(\n    validators.map(\n      (\n        validator: ValidatorMapFunc | ValidatorClass\n      ): ValidationResult | Promise<ValidationResult> => {\n        const isValidatorClass = (maybeClass: unknown): maybeClass is ValidatorClass =>\n          !!(maybeClass as Record<string, any>).validate;\n        if (validator && isValidatorClass(validator)) {\n          validator = validator.validate.bind(validator);\n        }\n\n        return validator(key, newValue, oldValue, changes, content);\n      }\n    )\n  );\n\n  if (validations.some(isPromise)) {\n    return Promise.all(validations).then(handleValidationsAsync);\n  }\n\n  return handleValidationsSync(validations as Array<ValidationResult>);\n}\n","import { isChange, getChangeValue } from '../-private/change';\n\n/**\n * Handles both single key or nested string keys ('person.name')\n *\n * @method getDeep\n */\nexport default function getDeep<T extends Record<string, any>>(\n  root: T,\n  path: string | string[]\n): any {\n  let obj: T = root;\n\n  if (path.indexOf('.') === -1) {\n    return obj[path as string];\n  }\n  const parts: string[] = typeof path === 'string' ? path.split('.') : path;\n\n  for (let i = 0; i < parts.length; i++) {\n    if (obj === undefined || obj === null) {\n      return undefined;\n    }\n\n    // next iteration has next level\n    obj = obj[parts[i]];\n  }\n\n  return obj;\n}\n\n/**\n * Returns subObject while skipping `Change` instances\n *\n * @method getSubObject\n */\nexport function getSubObject<T extends Record<string, any>>(root: T, path: string | string[]): any {\n  let obj: T = root;\n\n  if (path.indexOf('.') === -1) {\n    return obj[path as string];\n  }\n\n  const parts: string[] = typeof path === 'string' ? path.split('.') : path;\n\n  for (let i = 0; i < parts.length; i++) {\n    if (obj === undefined || obj === null) {\n      return undefined;\n    }\n\n    if (isChange(obj[parts[i]])) {\n      obj = getChangeValue(obj[parts[i]]);\n    } else {\n      obj = obj[parts[i]];\n    }\n  }\n\n  return obj;\n}\n","import handleMultipleValidations from './handle-multiple-validations';\nimport isPromise from './is-promise';\nimport isObject from './is-object';\nimport type {\n  ValidatorAction,\n  ValidatorMapFunc,\n  ValidatorClass,\n  ValidationResult,\n  ValidatorMap\n} from '../types';\nimport get from './get-deep';\n\n/**\n * returns a closure to lookup and validate k/v pairs set on a changeset\n *\n * @method lookupValidator\n * @param validationMap\n */\nexport default function lookupValidator(validationMap: ValidatorMap): ValidatorAction {\n  return ({ key, newValue, oldValue, changes, content }) => {\n    const validations = validationMap || {};\n    let validator:\n      | ValidatorMapFunc\n      | ValidatorMapFunc[]\n      | ValidatorClass\n      | ValidatorClass[]\n      | Array<ValidatorMapFunc | ValidatorClass> = get(validations, key);\n    const isValidatorClass = (maybeClass: unknown): maybeClass is ValidatorClass =>\n      !!(maybeClass as Record<string, any>).validate;\n    if (validator && isValidatorClass(validator)) {\n      validator = validator.validate.bind(validator);\n    }\n\n    if (!validator || isObject(validator)) {\n      return true;\n    }\n\n    let validation: ValidationResult | Promise<ValidationResult>;\n    if (Array.isArray(validator)) {\n      validation = handleMultipleValidations(validator, {\n        key,\n        newValue,\n        oldValue,\n        changes,\n        content\n      });\n    } else {\n      validation = (validator as ValidatorMapFunc)(key, newValue, oldValue, changes, content);\n    }\n\n    return isPromise(validation)\n      ? (validation as Promise<ValidationResult>).then((result) => {\n          return result;\n        })\n      : validation;\n  };\n}\n","// this statefull class holds and notifies\n\nexport default class Notifier<T extends any[]> {\n  listeners: ((...args: T) => void)[];\n\n  constructor() {\n    this.listeners = [];\n  }\n\n  addListener(callback: (...args: T) => void) {\n    this.listeners.push(callback);\n    return () => this.removeListener(callback);\n  }\n\n  removeListener(callback: (...args: T) => void) {\n    for (let i = 0; i < this.listeners.length; i++) {\n      if (this.listeners[i] === callback) {\n        this.listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  trigger(...args: T) {\n    this.listeners.forEach((callback) => callback(...args));\n  }\n}\n","import Notifier from './notifier';\n\nexport function notifierForEvent(object: any, eventName: string) {\n  if (object._eventedNotifiers === undefined) {\n    object._eventedNotifiers = {};\n  }\n\n  let notifier = object._eventedNotifiers[eventName];\n\n  if (!notifier) {\n    notifier = object._eventedNotifiers[eventName] = new Notifier();\n  }\n\n  return notifier;\n}\n","import { getChangeValue, isChange } from '../-private/change';\n\nexport function hasKey(\n  record: Record<string, any>,\n  path: string,\n  safeGet: (obj: Record<string, any>, key: string) => any\n): boolean {\n  const keys = path.split('.');\n\n  let obj = record;\n  for (const key of keys) {\n    if (!obj || !Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n\n    obj = safeGet(obj, key);\n    if (isChange(obj)) {\n      obj = getChangeValue(obj);\n    }\n  }\n\n  return true;\n}\n\nexport function pathInChanges(\n  record: Record<string, any>,\n  path: string,\n  safeGet: (obj: Record<string, any>, key: string) => any\n): boolean {\n  if (isChange(record)) {\n    return false;\n  }\n\n  const keys = path.split('.');\n\n  let obj = record;\n  for (const key of keys) {\n    if (!obj) {\n      return false;\n    }\n\n    if (keys[keys.length - 1] !== key && isChange(safeGet(obj, key))) {\n      return true;\n    }\n\n    obj = safeGet(obj, key);\n  }\n\n  return false;\n}\n","import { getChangeValue, isChange } from '../-private/change';\nimport isObject from './is-object';\n\n/**\n * traverse through target and unset `value` from leaf key so can access normally\n * {\n *  name: Change {\n *    value: 'Charles'\n *  }\n * }\n *\n * to\n *\n * {\n *  name: 'Charles'\n * }\n *\n * Shallow copy here is fine because we are swapping out the leaf nested object\n * rather than mutating a property in something with reference\n *\n * @method normalizeObject\n * @param {Object} target\n * @return {Object}\n */\nexport default function normalizeObject<T extends { [key: string]: any }>(\n  target: T,\n  isObj: (...args: unknown[]) => unknown = isObject\n): T {\n  if (!target || !isObj(target)) {\n    return target;\n  }\n\n  if (isChange(target)) {\n    return getChangeValue(target);\n  }\n\n  let obj = { ...target };\n\n  for (let key in obj) {\n    const next: any = obj[key];\n    if (next && isObj(next)) {\n      if (isChange(next)) {\n        obj[key] = getChangeValue(next);\n      } else {\n        try {\n          JSON.stringify(next);\n        } catch (e) {\n          break;\n        }\n        obj[key] = normalizeObject(next);\n      }\n    }\n  }\n\n  return obj;\n}\n","import isObject from './is-object';\nimport { isChange } from '../-private/change';\n\nexport function hasChanges(changes: Record<string, any>): boolean {\n  for (let key in changes) {\n    if (isChange(changes[key])) {\n      return true;\n    }\n\n    if (isObject(changes[key])) {\n      const isTruthy = hasChanges(changes[key]);\n      if (isTruthy) {\n        return isTruthy;\n      }\n    }\n  }\n\n  return false;\n}\n","let getOwnPropertyDescriptors: (obj: { [x: string]: any }) => { [x: string]: PropertyDescriptor };\n\nif (Object.getOwnPropertyDescriptors !== undefined) {\n  getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors;\n} else {\n  getOwnPropertyDescriptors = function (obj: object) {\n    let desc: Record<string, any> = {};\n\n    Object.keys(obj).forEach((key) => {\n      desc[key] = Object.getOwnPropertyDescriptor(obj, key);\n    });\n\n    return desc;\n  };\n}\n\n// keep getters and setters\nexport default function pureAssign(...objects: object[]): object {\n  return objects.reduce((acc, obj) => {\n    return Object.defineProperties(acc, getOwnPropertyDescriptors(obj));\n  }, {});\n}\n","import isObject from './is-object';\n\nfunction flatten(\n  validatorMap: Record<string, any>,\n  obj: Record<string, any>,\n  keys: string[],\n  keysUpToFunction: Array<string> = []\n): object {\n  for (let key of keys) {\n    const value: any = validatorMap[key];\n    if (typeof value.validate === 'function') {\n      // class with .validate function\n      obj[key] = value;\n    } else if (isObject(value)) {\n      flatten(value, obj, Object.keys(value), [...keysUpToFunction, key]);\n    } else if (typeof value === 'function') {\n      const dotSeparatedKeys = [...keysUpToFunction, key].join('.');\n      obj[dotSeparatedKeys] = value;\n    } else if (Array.isArray(value)) {\n      const isAllFuncs: boolean = value.every(\n        (item) => typeof item === 'function' || typeof item.validate === 'function'\n      );\n      if (isAllFuncs) {\n        const dotSeparatedKeys = [...keysUpToFunction, key].join('.');\n        obj[dotSeparatedKeys] = value;\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * With nested validations, we flatten to a dot separated 'user.email': validationFunc\n * Once doing so, validation will happen with a single level key or dot separated key\n *\n * @method flattenValidations\n * @return {object}\n */\nexport function flattenValidations(validatorMap: Record<string, any>): object {\n  if (!validatorMap) {\n    return {};\n  }\n\n  let obj: Record<string, any> = {};\n  return flatten(validatorMap, obj, Object.keys(validatorMap));\n}\n","export const CHANGESET = '__CHANGESET__';\n\nexport default function isChangeset(changeset: any): boolean {\n  return changeset && changeset['__changeset__'] === CHANGESET;\n}\n","export default function keyInObject(obj: any, key: string): boolean {\n  let [baseKey, ...keys] = key.split('.');\n\n  if (!baseKey || !(baseKey in obj)) {\n    return false;\n  }\n\n  if (!keys.length) {\n    return baseKey in obj;\n  }\n\n  let value = obj[baseKey];\n  if (value !== null && typeof value === 'object') {\n    return keyInObject(obj[baseKey], keys.join('.'));\n  }\n\n  return false;\n}\n","export function isArrayObject(obj: Record<string, any>) {\n  if (!obj) return false;\n\n  let maybeIndicies = Object.keys(obj);\n\n  return maybeIndicies.every((key) => Number.isInteger(parseInt(key, 10)));\n}\n\nexport function arrayToObject(array: any[]): Record<string, any> {\n  return array.reduce((obj, item, index) => {\n    obj[index] = item;\n    return obj;\n  }, {} as Record<string, any>);\n}\n\nexport function objectToArray(obj: Record<string, any>): any[] {\n  let result: any[] = [];\n\n  for (let [index, value] of Object.entries(obj)) {\n    result[parseInt(index, 10)] = value;\n  }\n\n  return result;\n}\n","import Change, { getChangeValue, isChange } from '../-private/change';\nimport isObject from './is-object';\nimport { isArrayObject } from './array-object';\n\ninterface Options {\n  safeSet?: any;\n  safeGet?: any;\n}\n\nfunction split(path: string): string[] {\n  const keys = path.split('.');\n\n  return keys;\n}\n\nfunction findSiblings(target: any, keys: string[]) {\n  const [leafKey] = keys.slice(-1);\n  const remaining = Object.keys(target)\n    .filter((k) => k !== leafKey)\n    .reduce((acc, key) => {\n      acc[key] = target[key];\n      return acc;\n    }, Object.create(null));\n\n  return { ...remaining };\n}\n\nfunction isValidKey(key: unknown) {\n  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\n}\n\n/**\n * TODO: consider\n * https://github.com/emberjs/ember.js/blob/822452c4432620fc67a777aba3b150098fd6812d/packages/%40ember/-internals/metal/lib/property_set.ts\n *\n * Handles both single path or nested string paths ('person.name')\n *\n * @method setDeep\n */\nexport default function setDeep(\n  target: any,\n  path: string,\n  value: unknown,\n  options: Options = { safeSet: undefined, safeGet: undefined }\n): any {\n  const keys = split(path).filter(isValidKey);\n  // We will mutate target and through complex reference, we will mutate the orig\n  let orig = target;\n\n  options.safeSet =\n    options.safeSet ||\n    function (obj: any, key: string, value: unknown): any {\n      return (obj[key] = value);\n    };\n  options.safeGet =\n    options.safeGet ||\n    function (obj: any, key: string): any {\n      return obj ? obj[key] : obj;\n    };\n\n  if (keys.length === 1) {\n    options.safeSet(target, path, value);\n    return target;\n  }\n\n  for (let i = 0; i < keys.length; i++) {\n    let prop = keys[i];\n\n    if (Array.isArray(target) && parseInt(prop, 10) < 0) {\n      throw new Error(\n        'Negative indices are not allowed as arrays do not serialize values at negative indices'\n      );\n    }\n\n    const isObj = isObject(options.safeGet(target, prop));\n    const isArray = Array.isArray(options.safeGet(target, prop));\n    const isComplex = isObj || isArray;\n\n    if (!isComplex) {\n      options.safeSet(target, prop, {});\n    } else if (isComplex && isChange(options.safeGet(target, prop))) {\n      let changeValue = getChangeValue(options.safeGet(target, prop));\n\n      if (isObject(changeValue)) {\n        // if an object, we don't want to lose sibling keys\n        const siblings = findSiblings(changeValue, keys);\n\n        const resolvedValue = isChange(value) ? getChangeValue(value) : value;\n\n        const isArrayLike = Array.isArray(target) || isArrayObject(target);\n        const nestedKeys = isArrayLike\n          ? keys.slice(i + 1, keys.length).join('.') // remove first key segment as well as the index\n          : keys.slice(1, keys.length).join('.'); // remove first key segment\n\n        let newValue;\n\n        // if the resolved value was deleted (via setting to null or undefined),\n        // there is no need to setDeep. We can short-circuit that and set\n        // newValue directly because of the shallow value\n        if (isArrayLike && undefined === resolvedValue) {\n          newValue = resolvedValue;\n        } else if (i === keys.length - 1) {\n          // If last key, this is the final value\n          newValue = resolvedValue;\n        } else {\n          newValue = setDeep(siblings, nestedKeys, resolvedValue, options);\n        }\n\n        options.safeSet(target, prop, new Change(newValue));\n\n        // since we are done with the `path`, we can terminate the for loop and return control\n        break;\n      } else {\n        // we don't want to merge new changes with a Change instance higher up in the obj tree\n        // thus we nullify the current Change instance to\n        options.safeSet(target, prop, {});\n      }\n    }\n\n    // last iteration, set and return control\n    if (i === keys.length - 1) {\n      options.safeSet(target, prop, value);\n\n      break;\n    }\n\n    // assign next level of object for next loop\n    target = options.safeGet(target, prop);\n  }\n\n  return orig;\n}\n","import setDeep from './set-deep';\n\nconst { keys } = Object;\n\n/**\n * Given an array of objects, merge their keys into a new object and\n * return the new object.\n */\nexport default function mergeNested<T>(...objects: Array<{ [key: string]: T }>): {\n  [key: string]: T;\n} {\n  let finalObj = {};\n\n  objects.forEach((obj) => keys(obj).forEach((key) => setDeep(finalObj, key, obj[key])));\n\n  return finalObj;\n}\n","export function buildOldValues(\n  content: any,\n  changes: Record<string, any>[],\n  getDeep: (obj: any, key: string) => any\n): object {\n  const obj = Object.create(null);\n\n  for (let change of changes) {\n    obj[change.key] = getDeep(content, change.key);\n  }\n\n  return obj;\n}\n","import { getChangeValue, isChange } from '../-private/change';\nimport normalizeObject from './normalize-object';\nimport { isArrayObject, objectToArray, arrayToObject } from './array-object';\n\ninterface Options {\n  safeGet: any;\n  safeSet: any;\n  propertyIsUnsafe?: any;\n  getKeys?: (record: Record<string, unknown>) => string[];\n}\n\nfunction isNonNullObject(value: any): boolean {\n  return !!value && typeof value === 'object';\n}\n\nfunction isSpecial(value: any): boolean {\n  let stringValue = Object.prototype.toString.call(value);\n\n  return stringValue === '[object RegExp]' || stringValue === '[object Date]';\n}\n\nfunction isMergeableObject(value: any): boolean {\n  return isNonNullObject(value) && !isSpecial(value);\n}\n\nfunction getEnumerableOwnPropertySymbols(target: any): any {\n  return Object.getOwnPropertySymbols\n    ? Object.getOwnPropertySymbols(target).filter((symbol) => {\n        return target.propertyIsEnumerable(symbol);\n      })\n    : [];\n}\n\nfunction getKeys(target: any) {\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n}\n\nfunction propertyIsOnObject(object: any, property: any) {\n  try {\n    return property in object;\n  } catch (_) {\n    return false;\n  }\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nexport function propertyIsUnsafe(target: any, key: string): boolean {\n  return (\n    propertyIsOnObject(target, key) && // Properties are safe to merge if they don't exist in the target yet,\n    // unsafe if they exist up the prototype chain and also unsafe if they're nonenumerable.\n    !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key))\n  );\n}\n\n/**\n * DFS - traverse depth first until find object with `value`.  Then go back up tree and try on next key\n * Need to exhaust all possible avenues.\n *\n * @method buildPathToValue\n */\nfunction buildPathToValue(\n  source: any,\n  options: Options,\n  kv: Record<string, any>,\n  possibleKeys: string[]\n): Record<string, any> {\n  Object.keys(source).forEach((key: string): void => {\n    let possible = source[key];\n    if (possible && isChange(possible)) {\n      kv[[...possibleKeys, key].join('.')] = getChangeValue(possible);\n      return;\n    }\n\n    if (possible && typeof possible === 'object') {\n      buildPathToValue(possible, options, kv, [...possibleKeys, key]);\n    }\n  });\n\n  return kv;\n}\n\n/**\n * `source` will always have a leaf key `value` with the property we want to set\n *\n * @method mergeTargetAndSource\n */\nfunction mergeTargetAndSource(target: any, source: any, options: Required<Options>): any {\n  options.getKeys(source).forEach((key) => {\n    // proto poisoning.  So can set by nested key path 'person.name'\n    if (options.propertyIsUnsafe(target, key)) {\n      // if safeSet, we will find keys leading up to value and set\n      if (options.safeSet) {\n        const kv: Record<string, any> = buildPathToValue(source, options, {}, []);\n        // each key will be a path nested to the value `person.name.other`\n        if (Object.keys(kv).length > 0) {\n          // we found some keys!\n          for (key in kv) {\n            const val = kv[key];\n            options.safeSet(target, key, val);\n          }\n        }\n      }\n\n      return;\n    }\n\n    // else safe key on object\n    if (\n      propertyIsOnObject(target, key) &&\n      isMergeableObject(source[key]) &&\n      !isChange(source[key])\n    ) {\n      options.safeSet(\n        target,\n        key,\n        mergeDeep(options.safeGet(target, key), options.safeGet(source, key), options)\n      );\n    } else {\n      let next = source[key];\n      if (next && isChange(next)) {\n        return options.safeSet(target, key, getChangeValue(next));\n      }\n\n      return options.safeSet(target, key, normalizeObject(next));\n    }\n  });\n\n  return target;\n}\n\n/**\n * goal is to mutate target with source's properties, ensuring we dont encounter\n * pitfalls of { ..., ... } spread syntax overwriting keys on objects that we merged\n *\n * This is also adjusted for Ember peculiarities.  Specifically `options.setPath` will allows us\n * to handle properties on Proxy objects (that aren't the target's own property)\n *\n * @method mergeDeep\n */\nexport default function mergeDeep(\n  target: any,\n  source: any,\n  options: Options = {\n    safeGet: undefined,\n    safeSet: undefined,\n    propertyIsUnsafe: undefined,\n    getKeys: undefined\n  }\n): object | [any] {\n  options.getKeys = options.getKeys || getKeys;\n  options.propertyIsUnsafe = options.propertyIsUnsafe || propertyIsUnsafe;\n\n  options.safeGet =\n    options.safeGet ||\n    function (obj: Record<string, any>, key: string): Record<string, any> {\n      return obj[key];\n    };\n  options.safeSet =\n    options.safeSet ||\n    function (obj: any, key: string, value: unknown): any {\n      return (obj[key] = value);\n    };\n  let sourceIsArray = Array.isArray(source);\n  let targetIsArray = Array.isArray(target);\n  let sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n  if (!sourceAndTargetTypesMatch) {\n    let sourceIsArrayLike = isArrayObject(source);\n\n    if (targetIsArray && sourceIsArrayLike) {\n      return objectToArray(\n        mergeTargetAndSource(arrayToObject(target), source, options as Required<Options>)\n      );\n    }\n\n    return source;\n  } else if (sourceIsArray) {\n    return source;\n  } else if (target === null || target === undefined) {\n    /**\n     * If the target was set to null or undefined, we always want to return the source.\n     * There is nothing to merge.\n     *\n     * Without this explicit check, typeof null === typeof {any object-like thing}\n     * which means that mergeTargetAndSource will be called, and you can't merge with null\n     */\n    return source;\n  } else {\n    return mergeTargetAndSource(target, source, options as Required<Options>);\n  }\n}\n","import type { ProxyHandler, Content } from '../types';\nimport isObjectFn from './is-object';\nimport setDeep from './set-deep';\nimport Change, { getChangeValue, isChange } from '../-private/change';\nimport normalizeObject from './normalize-object';\nimport { objectToArray, arrayToObject } from './array-object';\nimport mergeDeep from './merge-deep';\n\nconst objectProxyHandler = {\n  /**\n   * Priority of access - changes, content, then check node\n   * @property get\n   */\n  get(node: ProxyHandler, key: string): any {\n    if (typeof key === 'symbol') {\n      return;\n    }\n\n    let childValue = node.safeGet(node.changes, key);\n\n    if (isChange(childValue)) {\n      return getChangeValue(childValue);\n    }\n\n    if (isObjectFn(childValue)) {\n      let childNode: ProxyHandler | undefined = node.children[key];\n\n      if (childNode === undefined && node.content) {\n        let childContent = node.safeGet(node.content, key);\n        // cache it\n        childNode = node.children[key] = new ObjectTreeNode(childValue, childContent, node.safeGet);\n      }\n\n      // return proxy if object so we can trap further access to changes or content\n      if (childNode) {\n        return childNode.proxy;\n      }\n    }\n\n    if (typeof childValue !== 'undefined') {\n      // primitive\n      return childValue;\n    } else if (node.content) {\n      const nodeContent = node.content;\n      if (node.safeGet(nodeContent, key) !== undefined) {\n        return node.safeGet(nodeContent, key);\n      }\n    }\n\n    if (typeof node[key] === 'function' || node.hasOwnProperty(key)) {\n      return node[key];\n    }\n  },\n\n  ownKeys(node: ProxyHandler): any {\n    return Reflect.ownKeys(node.changes);\n  },\n\n  getOwnPropertyDescriptor(node: ProxyHandler, prop: string): any {\n    return Reflect.getOwnPropertyDescriptor(node.changes, prop);\n  },\n\n  has(node: ProxyHandler, prop: string): any {\n    return Reflect.has(node.changes, prop);\n  },\n\n  set(node: ProxyHandler, key: string, value: unknown): any {\n    // dont want to set private properties on changes (usually found on outside actors)\n    if (key.startsWith('_')) {\n      return Reflect.set(node, key, value);\n    }\n    return Reflect.set(node.changes, key, new Change(value));\n  }\n};\n\nfunction defaultSafeGet(obj: Record<string, any>, key: string) {\n  return obj[key];\n}\n\nclass ObjectTreeNode implements ProxyHandler {\n  changes: Record<string, any>;\n  content: Content;\n  proxy: any;\n  children: Record<string, any>;\n\n  constructor(\n    changes: Record<string, any> = {},\n    content: Content = {},\n    public safeGet: (obj: any, key: string) => any = defaultSafeGet,\n    public isObject: (...args: unknown[]) => unknown = isObjectFn\n  ) {\n    this.changes = changes;\n    this.content = content;\n    this.proxy = new Proxy(this, objectProxyHandler);\n    this.children = Object.create(null);\n  }\n\n  get(key: string) {\n    return this.safeGet(this.changes, key);\n  }\n\n  set(key: string, value: unknown) {\n    return setDeep(this.changes, key, value);\n  }\n\n  unwrap(): Record<string, any> {\n    let changes = this.changes;\n\n    if (isObjectFn(changes)) {\n      changes = normalizeObject(changes, this.isObject);\n\n      const content = this.content;\n      if (isObjectFn(content)) {\n        changes = normalizeObject(changes, this.isObject);\n        return { ...content, ...changes };\n      } else if (Array.isArray(content)) {\n        changes = normalizeObject(changes, this.isObject);\n\n        return objectToArray(mergeDeep(arrayToObject(content), changes));\n      }\n    }\n\n    return changes;\n  }\n}\n\nexport { ObjectTreeNode };\n","/**\n * Merges all sources together, excluding keys in excludedKeys.\n *\n * @param  {string[]} excludedKeys\n * @param  {...object} sources\n * @return {object}\n */\nexport default function objectWithout(excludedKeys: string[], ...sources: any[]): any {\n  return sources.reduce((acc: Record<string, any>, source: any): object => {\n    Object.keys(source)\n      .filter((key) => excludedKeys.indexOf(key) === -1 || !source.hasOwnProperty(key))\n      .forEach((key) => (acc[key] = source[key]));\n    return acc;\n  }, {});\n}\n","export default function take(\n  originalObj: { [key: string]: any } = {},\n  keysToTake: string[] = []\n): { [key: string]: any } {\n  let newObj: { [key: string]: any } = {};\n\n  for (let key in originalObj) {\n    if (keysToTake.indexOf(key) !== -1) {\n      newObj[key] = originalObj[key];\n    }\n  }\n\n  return newObj;\n}\n","import Change, { getChangeValue, isChange } from './-private/change';\nimport { getKeyValues, getKeyErrorValues } from './utils/get-key-values';\nimport { notifierForEvent } from './-private/evented';\nimport Err from './-private/err';\nimport { hasKey, pathInChanges } from './utils/has-key';\nimport normalizeObject from './utils/normalize-object';\nimport { hasChanges } from './utils/has-changes';\nimport pureAssign from './utils/assign';\nimport { CHANGESET } from './utils/is-changeset';\nimport isObject from './utils/is-object';\nimport keyInObject from './utils/key-in-object';\nimport { buildOldValues } from './utils/build-old-values';\nimport { ObjectTreeNode } from './utils/object-tree-node';\nimport mergeDeep from './utils/merge-deep';\nimport setDeep from './utils/set-deep';\nimport getDeep, { getSubObject } from './utils/get-deep';\nimport { objectToArray, arrayToObject } from './utils/array-object';\nimport structuredClone from '@ungap/structured-clone';\n\nimport type {\n  Changes,\n  Config,\n  Content,\n  Errors,\n  IErr,\n  INotifier,\n  InternalMap,\n  NewProperty,\n  Snapshot,\n  ValidationErr\n} from './types';\n\nconst { keys } = Object;\nconst CONTENT = '_content';\nconst PREVIOUS_CONTENT = '_previousContent';\nconst CHANGES = '_changes';\n// const ORIGINAL = '_original';\nconst ERRORS = '_errors';\nconst ERRORS_CACHE = '_errorsCache';\nconst OPTIONS = '_options';\nconst AFTER_ROLLBACK_EVENT = 'afterRollback';\n\nconst DEBUG = process.env.NODE_ENV !== 'production';\n\nfunction assert(msg: string, property: unknown): void {\n  if (DEBUG) {\n    if (!property) {\n      throw new Error(msg);\n    }\n  }\n}\n\nfunction maybeUnwrapProxy(content: Content): any {\n  return content;\n}\n\nexport function newFormat(\n  obj: Record<string, any>[],\n  original: any,\n  getDeep: (obj: any, key: string) => any\n): Record<string, any> {\n  let newFormat: Record<string, any> = {};\n  for (let item of obj) {\n    const { key, value } = item;\n    newFormat[key] = {\n      current: value,\n      original: getDeep(original, key)\n    };\n  }\n\n  return newFormat;\n}\n\n// This is intended to provide an alternative changeset structure compatible with `yup`\n// This slims down the set of features, including removed APIs and `validate` returns just the `validate(obj)` method call and requires users to manually add errors.\nexport class ValidatedChangeset {\n  constructor(obj: object, options: Config = {}) {\n    this[CONTENT] = obj;\n    this[PREVIOUS_CONTENT] = undefined;\n    this[CHANGES] = {};\n    this[OPTIONS] = options;\n\n    this[ERRORS] = {};\n    this[ERRORS_CACHE] = {};\n  }\n\n  /**\n   * Any property that is not one of the getter/setter/methods on the\n   * BufferedProxy instance. The value type is `unknown` in order to avoid\n   * having to predefine key/value pairs of the correct types in the target\n   * object. Setting the index signature to `[key: string]: T[K]` would allow us\n   * to typecheck the value that is set on the proxy. However, no\n   * getters/setters/methods can be added to the class. This is the tradeoff\n   * we make for this particular design pattern (class based BufferedProxy).\n   */\n  [key: string]: unknown;\n  [CONTENT]: object;\n  [PREVIOUS_CONTENT]: object | undefined;\n  // [ORIGINAL]: Changes;\n  [CHANGES]: Changes;\n  [ERRORS]: Errors<any>;\n  [ERRORS_CACHE]: Errors<any>;\n  [OPTIONS]: Config;\n\n  __changeset__ = CHANGESET;\n\n  _eventedNotifiers = {};\n\n  on(eventName: string, callback: (...args: unknown[]) => unknown): INotifier {\n    const notifier = notifierForEvent(this, eventName);\n    return notifier.addListener(callback);\n  }\n\n  off(eventName: string, callback: (...args: unknown[]) => unknown): INotifier {\n    const notifier = notifierForEvent(this, eventName);\n    return notifier.removeListener(callback);\n  }\n\n  trigger(eventName: string, ...args: any[]): void {\n    const notifier = notifierForEvent(this, eventName);\n    if (notifier) {\n      notifier.trigger(...args);\n    }\n  }\n\n  /**\n   * @property isObject\n   * @override\n   */\n  isObject = isObject;\n\n  /**\n   * @property maybeUnwrapProxy\n   * @override\n   */\n  maybeUnwrapProxy = maybeUnwrapProxy;\n\n  /**\n   * @property setDeep\n   * @override\n   */\n  setDeep = setDeep;\n\n  /**\n   * @property getDeep\n   * @override\n   */\n  getDeep = getDeep;\n\n  /**\n   * @property mergeDeep\n   * @override\n   */\n  mergeDeep = mergeDeep;\n\n  /**\n   * @property safeGet\n   * @override\n   */\n  safeGet(obj: any, key: string) {\n    return obj[key];\n  }\n\n  /**\n   * @property safeSet\n   * @override\n   */\n  safeSet(obj: any, key: string, value: unknown) {\n    return (obj[key] = value);\n  }\n\n  /**\n   * @property changes\n   * @type {Array}\n   */\n  get changes() {\n    let obj = this[CHANGES];\n    let original = this[CONTENT];\n\n    // foo: {\n    //  original: 0,\n    //  current: 1,\n    // }\n    return newFormat(getKeyValues(obj), original, this.getDeep);\n  }\n\n  /**\n   * @property errors\n   * @type {Array}\n   */\n  get errors() {\n    let obj = this[ERRORS];\n\n    return getKeyErrorValues(obj);\n  }\n\n  get change() {\n    let obj: Changes = this[CHANGES];\n    if (hasChanges(this[CHANGES])) {\n      return normalizeObject(obj);\n    }\n\n    return {};\n  }\n\n  get error() {\n    return this[ERRORS];\n  }\n\n  get data() {\n    return this[CONTENT];\n  }\n\n  /**\n   * @property isValid\n   * @type {Array}\n   */\n  get isValid() {\n    return getKeyErrorValues(this[ERRORS]).length === 0;\n  }\n  /**\n   * @property isPristine\n   * @type {Boolean}\n   */\n  get isPristine() {\n    let validationKeys = Object.keys(this[CHANGES]);\n    const userChangesetKeys: string[] | undefined = this[OPTIONS].changesetKeys;\n    if (Array.isArray(userChangesetKeys) && userChangesetKeys.length) {\n      validationKeys = validationKeys.filter((k) => userChangesetKeys.includes(k));\n    }\n\n    if (validationKeys.length === 0) {\n      return true;\n    }\n\n    return !hasChanges(this[CHANGES]);\n  }\n  /**\n   * @property isInvalid\n   * @type {Boolean}\n   */\n  get isInvalid() {\n    return !this.isValid;\n  }\n  /**\n   * @property isDirty\n   * @type {Boolean}\n   */\n  get isDirty() {\n    return !this.isPristine;\n  }\n\n  /**\n   * Stores change on the changeset.\n   * This approximately works just like the Ember API\n   *\n   * @method setUnknownProperty\n   */\n  setUnknownProperty<T>(key: string, value: T): void {\n    let config: Config = this[OPTIONS];\n    let changesetKeys = config.changesetKeys;\n    if (Array.isArray(changesetKeys) && changesetKeys.length > 0) {\n      const hasKey = changesetKeys.find((chKey) => key.match(chKey));\n      if (!hasKey) {\n        return;\n      }\n    }\n\n    let content: Content = this[CONTENT];\n    let oldValue = this.safeGet(content, key);\n\n    this._setProperty({ key, value, oldValue });\n  }\n\n  /**\n   * String representation for the changeset.\n   */\n  get [Symbol.toStringTag](): string {\n    let normalisedContent: object = pureAssign(this[CONTENT], {});\n    return `changeset:${normalisedContent.toString()}`;\n  }\n\n  /**\n   * String representation for the changeset.\n   */\n  toString(): string {\n    let normalisedContent: object = pureAssign(this[CONTENT], {});\n    return `changeset:${normalisedContent.toString()}`;\n  }\n\n  /**\n   * Executes the changeset if in a valid state.\n   *\n   * @method execute\n   */\n  execute(): this {\n    let oldContent;\n    if (this.isValid && this.isDirty) {\n      let content: Content = this[CONTENT];\n      let changes: Changes = this[CHANGES];\n\n      // keep old values in case of error and we want to rollback\n      oldContent = buildOldValues(content, getKeyValues(changes), this.getDeep);\n\n      // we want mutation on original object\n      // @tracked\n      this[CONTENT] = this.mergeDeep(content, changes, {\n        safeGet: this.safeGet,\n        safeSet: this.safeSet\n      });\n    }\n\n    // trigger any registered callbacks by same keyword as method name\n    this.trigger('execute');\n\n    this[CHANGES] = {};\n    this[PREVIOUS_CONTENT] = oldContent;\n\n    return this;\n  }\n\n  unexecute(): this {\n    if (this[PREVIOUS_CONTENT]) {\n      this[CONTENT] = this.mergeDeep(this[CONTENT], this[PREVIOUS_CONTENT], {\n        safeGet: this.safeGet,\n        safeSet: this.safeSet\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the changeset to its pristine state, and discards changes and\n   * errors.\n   *\n   * @method rollback\n   */\n  rollback(): this {\n    // Get keys before reset.\n    let keys = this._rollbackKeys();\n\n    // Reset.\n    this[CHANGES] = {};\n    this[ERRORS] = {};\n    this[ERRORS_CACHE] = {};\n    this._notifyVirtualProperties(keys);\n\n    this.trigger(AFTER_ROLLBACK_EVENT);\n    return this;\n  }\n\n  /**\n   * Discards any errors, keeping only valid changes.\n   *\n   * @public\n   * @chainable\n   * @method rollbackInvalid\n   * @param {String} key optional key to rollback invalid values\n   * @return {Changeset}\n   */\n  rollbackInvalid(key: string | void): this {\n    let errorKeys = keys(this[ERRORS]);\n\n    if (key) {\n      this._notifyVirtualProperties([key]);\n      // @tracked\n      this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n      this[ERRORS_CACHE] = this[ERRORS];\n      if (errorKeys.indexOf(key) > -1) {\n        this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n      }\n    } else {\n      this._notifyVirtualProperties();\n      this[ERRORS] = {};\n      this[ERRORS_CACHE] = this[ERRORS];\n\n      // if on CHANGES hash, rollback those as well\n      errorKeys.forEach((errKey) => {\n        this[CHANGES] = this._deleteKey(CHANGES, errKey) as Changes;\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * @method validate\n   */\n  async validate(cb: (changes: Record<string, any>) => unknown): Promise<any> {\n    const changes = this[CHANGES];\n    const content = this[CONTENT];\n\n    // return an object that does not poison original model and provides user with full set of data + changes to validate\n    return cb(this.mergeDeep(structuredClone(content), changes));\n  }\n\n  /**\n   * Manually add an error to the changeset. If there is an existing\n   * error or change for `key`, it will be overwritten.\n   *\n   * @method addError\n   */\n  addError<T>(key: string, error: IErr<T> | ValidationErr) {\n    // Construct new `Err` instance.\n    let newError;\n\n    const isIErr = <T>(error: unknown): error is IErr<T> =>\n      this.isObject(error) && !Array.isArray(error);\n    if (isIErr(error)) {\n      assert('Error must have value.', error.hasOwnProperty('value') || error.value !== undefined);\n      assert('Error must have validation.', error.hasOwnProperty('validation'));\n      newError = new Err(error.value, error.validation);\n    } else {\n      let value = this[key];\n      newError = new Err(value, error as ValidationErr);\n    }\n\n    // Add `key` to errors map.\n    let errors: Errors<any> = this[ERRORS];\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key, newError, { safeSet: this.safeSet });\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    // Return passed-in `error`.\n    return newError;\n  }\n\n  /**\n   * @method removeError\n   */\n  removeError(key: string) {\n    // Remove `key` to errors map.\n    let errors: Errors<any> = this[ERRORS];\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key, null, { safeSet: this.safeSet });\n    this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n    this[ERRORS_CACHE] = this[ERRORS];\n  }\n\n  /**\n   * @method removeError\n   */\n  removeErrors() {\n    // @tracked\n    this[ERRORS] = {};\n    this[ERRORS_CACHE] = this[ERRORS];\n  }\n\n  /**\n   * Manually push multiple errors to the changeset as an array.\n   * key maybe in form 'name.short' so need to go deep\n   *\n   * @method pushErrors\n   */\n  pushErrors(key: string, ...newErrors: string[] | ValidationErr[]): IErr<any> {\n    let errors: Errors<any> = this[ERRORS];\n    let existingError: IErr<any> | Err = this.getDeep(errors, key) || new Err(null, []);\n    let validation: ValidationErr | ValidationErr[] = existingError.validation;\n    let value: any = this[key];\n\n    if (!Array.isArray(validation) && Boolean(validation)) {\n      existingError.validation = [validation];\n    }\n\n    let v = existingError.validation;\n    validation = [...v, ...newErrors];\n    let newError = new Err(value, validation);\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key as string, newError, { safeSet: this.safeSet });\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    return { value, validation };\n  }\n\n  /**\n   * Creates a snapshot of the changeset's errors and changes.\n   *\n   * @method snapshot\n   */\n  snapshot(): Snapshot {\n    let changes: Changes = this[CHANGES];\n    let errors: Errors<any> = this[ERRORS];\n\n    return {\n      changes: this.getChangesForSnapshot(changes),\n\n      errors: keys(errors).reduce((newObj: Errors<any>, key: keyof Errors<any>) => {\n        let e = errors[key];\n        newObj[key] = { value: e.value, validation: e.validation };\n        return newObj;\n      }, {})\n    };\n  }\n\n  private getChangesForSnapshot(changes: Changes) {\n    return keys(changes).reduce((newObj: Changes, key: keyof Changes) => {\n      newObj[key] = isChange(changes[key])\n        ? getChangeValue(changes[key])\n        : this.getChangesForSnapshot(changes[key]);\n      return newObj;\n    }, {});\n  }\n\n  /**\n   * Restores a snapshot of changes and errors. This overrides existing\n   * changes and errors.\n   *\n   * @method restore\n   */\n  restore({ changes, errors }: Snapshot): this {\n    let newChanges: Changes = this.getChangesFromSnapshot(changes);\n\n    let newErrors: Errors<any> = keys(errors).reduce((newObj: Errors<any>, key: keyof Changes) => {\n      let e: IErr<any> = errors[key];\n      newObj[key] = new Err(e.value, e.validation);\n      return newObj;\n    }, {});\n\n    // @tracked\n    this[CHANGES] = newChanges;\n    // @tracked\n    this[ERRORS] = newErrors;\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    this._notifyVirtualProperties();\n    return this;\n  }\n\n  private getChangesFromSnapshot(changes: Changes) {\n    return keys(changes).reduce((newObj, key) => {\n      newObj[key] = this.getChangeForProp(changes[key]);\n      return newObj;\n    }, {} as Changes);\n  }\n\n  private getChangeForProp(value: any) {\n    if (!isObject(value)) {\n      return new Change(value);\n    }\n\n    return keys(value).reduce((newObj, key) => {\n      newObj[key] = this.getChangeForProp(value[key]);\n      return newObj;\n    }, {} as Changes);\n  }\n\n  /**\n   * Sets property on the changeset.\n   */\n  _setProperty<T>({ key, value, oldValue }: NewProperty<T>): void {\n    let changes: Changes = this[CHANGES];\n\n    // Happy path: update change map.\n    if (!isEqual(value, oldValue) || oldValue === undefined) {\n      // @tracked\n      let result: Changes = this.setDeep(changes, key, new Change(value), {\n        safeSet: this.safeSet\n      });\n\n      this[CHANGES] = result;\n    } else if (keyInObject(changes, key)) {\n      // @tracked\n      // remove key if setting back to original\n      this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n    }\n  }\n\n  /**\n   * Notifies virtual properties set on the changeset of a change.\n   * You can specify which keys are notified by passing in an array.\n   *\n   * @private\n   * @param {Array} keys\n   * @return {Void}\n   */\n  _notifyVirtualProperties(keys?: string[]): string[] | undefined {\n    if (!keys) {\n      keys = this._rollbackKeys();\n    }\n\n    return keys;\n  }\n\n  /**\n   * Gets the changes and error keys.\n   */\n  _rollbackKeys(): string[] {\n    let changes: Changes = this[CHANGES];\n    let errors: Errors<any> = this[ERRORS];\n    return [...new Set([...keys(changes), ...keys(errors)])];\n  }\n\n  /**\n   * Deletes a key off an object and notifies observers.\n   */\n  _deleteKey(objName: string, key = ''): InternalMap {\n    let obj = this[objName] as InternalMap;\n    let keys = key.split('.');\n\n    if (keys.length === 1 && obj.hasOwnProperty(key)) {\n      delete obj[key];\n    } else if (obj[keys[0]]) {\n      let [base, ...remaining] = keys;\n      let previousNode: { [key: string]: any } = obj;\n      let currentNode: any = obj[base];\n      let currentKey: string | undefined = base;\n\n      // find leaf and delete from map\n      while (this.isObject(currentNode) && currentKey) {\n        let curr: { [key: string]: unknown } = currentNode;\n        if (isChange(curr) || typeof curr.value !== 'undefined' || curr.validation) {\n          delete previousNode[currentKey];\n        }\n\n        currentKey = remaining.shift();\n        previousNode = currentNode;\n        if (currentKey) {\n          currentNode = currentNode[currentKey];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  get(key: string): any {\n    // 'person'\n    // 'person.username'\n    let [baseKey, ...remaining] = key.split('.');\n    let changes: Changes = this[CHANGES];\n    let content: Content = this[CONTENT];\n    if (Object.prototype.hasOwnProperty.call(changes, baseKey)) {\n      const changesValue = this.getDeep(changes, key);\n      const isObject = this.isObject(changesValue);\n\n      if (!isObject && changesValue !== undefined) {\n        // if safeGet returns a primitive, then go ahead return\n        return changesValue;\n      }\n    }\n    // At this point, we may have a changes object, a dot separated key, or a need to access the `key`\n    // on `this` or `content`\n    if (Object.prototype.hasOwnProperty.call(changes, baseKey) && hasChanges(changes)) {\n      let baseChanges = changes[baseKey];\n\n      // 'user.name'\n      const normalizedBaseChanges = normalizeObject(baseChanges);\n      if (this.isObject(normalizedBaseChanges)) {\n        const result = this.maybeUnwrapProxy(\n          this.getDeep(normalizedBaseChanges, remaining.join('.'))\n        );\n\n        // need to do this inside of Change object\n        // basically anything inside of a Change object that is undefined means it was removed\n        if (\n          typeof result === 'undefined' &&\n          pathInChanges(changes, key, this.safeGet) &&\n          !hasKey(changes, key, this.safeGet) &&\n          this.getDeep(content, key)\n        ) {\n          return;\n        }\n\n        if (this.isObject(result)) {\n          if (isChange(result)) {\n            return getChangeValue(result);\n          }\n\n          const baseContent = this.safeGet(content, baseKey) || {};\n          const subContent = this.getDeep(baseContent, remaining.join('.'));\n          const subChanges = getSubObject(changes, key);\n          // give back an object that can further retrieve changes and/or content\n          const tree = new ObjectTreeNode(subChanges, subContent, this.getDeep, this.isObject);\n          return tree.proxy;\n        } else if (typeof result !== 'undefined') {\n          return result;\n        }\n      }\n\n      // this comes after the isObject check to ensure we don't lose remaining keys\n      if (isChange(baseChanges) && remaining.length === 0) {\n        return getChangeValue(baseChanges);\n      }\n    }\n\n    // return getters/setters/methods on BufferedProxy instance\n    if (baseKey in this || key in this) {\n      return this.getDeep(this, key);\n    }\n\n    const subContent = this.maybeUnwrapProxy(this.getDeep(content, key));\n    if (this.isObject(subContent)) {\n      let subChanges = this.getDeep(changes, key);\n      if (!subChanges) {\n        // if no changes, we need to add the path to the existing changes (mutate)\n        // so further access to nested keys works\n        subChanges = this.getDeep(this.setDeep(changes, key, {}), key);\n      }\n\n      // may still access a value on the changes or content objects\n      const tree = new ObjectTreeNode(subChanges, subContent, this.getDeep, this.isObject);\n      return tree.proxy;\n    } else if (Array.isArray(subContent)) {\n      let subChanges = this.getDeep(changes, key);\n      if (!subChanges) {\n        // return array of contents. Dont need to worry about further access sibling keys in array case\n        return subContent;\n      }\n\n      if (isObject(subChanges)) {\n        if (isObject(subContent)) {\n          subChanges = normalizeObject(subChanges, this.isObject);\n          return { ...subContent, ...subChanges };\n        } else if (Array.isArray(subContent)) {\n          subChanges = normalizeObject(subChanges, this.isObject);\n\n          return objectToArray(mergeDeep(arrayToObject(subContent), subChanges));\n        }\n      }\n\n      return subChanges;\n    }\n\n    return subContent;\n  }\n\n  set<T>(key: string, value: T): void {\n    if (this.hasOwnProperty(key) || keyInObject(this, key)) {\n      this[key] = value;\n    } else {\n      this.setUnknownProperty(key, value);\n    }\n  }\n}\n\n/**\n * Creates new changesets.\n */\nexport function changeset(obj: object, options?: Config): ValidatedChangeset {\n  return new ValidatedChangeset(obj, options);\n}\n\ntype T20 = InstanceType<typeof ValidatedChangeset>;\n\nexport function Changeset(obj: object, options?: Config): ValidatedChangeset {\n  const c: ValidatedChangeset = changeset(obj, options);\n\n  return new Proxy(c, {\n    get(targetBuffer, key /*, receiver*/) {\n      const res = targetBuffer.get(key.toString());\n      return res;\n    },\n\n    set(targetBuffer, key, value /*, receiver*/) {\n      targetBuffer.set(key.toString(), value);\n      return true;\n    }\n  }) as T20;\n}\n\n// determine if two values are equal\nfunction isEqual(v1: unknown, v2: unknown) {\n  if (v1 instanceof Date && v2 instanceof Date) {\n    return v1.getTime() === v2.getTime();\n  }\n\n  return v1 === v2;\n}\n","import Change, { getChangeValue, isChange } from './-private/change';\nimport { getKeyValues, getKeyErrorValues } from './utils/get-key-values';\nimport lookupValidator from './utils/validator-lookup';\nimport { notifierForEvent } from './-private/evented';\nimport Err from './-private/err';\nimport { hasKey, pathInChanges } from './utils/has-key';\nimport normalizeObject from './utils/normalize-object';\nimport { hasChanges } from './utils/has-changes';\nimport pureAssign from './utils/assign';\nimport { flattenValidations } from './utils/flatten-validations';\nimport isChangeset, { CHANGESET } from './utils/is-changeset';\nimport isObject from './utils/is-object';\nimport isPromise from './utils/is-promise';\nimport keyInObject from './utils/key-in-object';\nimport mergeNested from './utils/merge-nested';\nimport { buildOldValues } from './utils/build-old-values';\nimport { ObjectTreeNode } from './utils/object-tree-node';\nimport objectWithout from './utils/object-without';\nimport take from './utils/take';\nimport mergeDeep, { propertyIsUnsafe } from './utils/merge-deep';\nimport setDeep from './utils/set-deep';\nimport getDeep, { getSubObject } from './utils/get-deep';\nimport { objectToArray, arrayToObject, isArrayObject } from './utils/array-object';\n\nimport type {\n  Changes,\n  Config,\n  Content,\n  Errors,\n  IErr,\n  IChangeset,\n  INotifier,\n  InternalMap,\n  NewProperty,\n  PrepareChangesFn,\n  RunningValidations,\n  Snapshot,\n  ValidationErr,\n  ValidationResult,\n  ValidatorAction,\n  ValidatorMap\n} from './types';\n\nimport {\n  ValidatedChangeset as ValidationChangeset,\n  Changeset as ValidationChangesetFactory\n} from './validated';\n\nexport {\n  ValidationChangeset,\n  ValidationChangesetFactory,\n  CHANGESET,\n  Change,\n  Err,\n  isArrayObject,\n  arrayToObject,\n  objectToArray,\n  buildOldValues,\n  isChangeset,\n  isObject,\n  isChange,\n  getChangeValue,\n  isPromise,\n  getKeyValues,\n  keyInObject,\n  lookupValidator,\n  mergeNested,\n  normalizeObject,\n  objectWithout,\n  pureAssign,\n  take,\n  mergeDeep,\n  setDeep,\n  getDeep,\n  propertyIsUnsafe\n};\n\nconst { keys } = Object;\nconst CONTENT = '_content';\nconst PREVIOUS_CONTENT = '_previousContent';\nconst CHANGES = '_changes';\nconst ERRORS = '_errors';\nconst ERRORS_CACHE = '_errorsCache';\nconst VALIDATOR = '_validator';\nconst OPTIONS = '_options';\nconst RUNNING_VALIDATIONS = '_runningValidations';\nconst BEFORE_VALIDATION_EVENT = 'beforeValidation';\nconst AFTER_VALIDATION_EVENT = 'afterValidation';\nconst AFTER_ROLLBACK_EVENT = 'afterRollback';\nconst defaultValidatorFn = () => true;\nconst defaultOptions = { skipValidate: false };\n\nconst DEBUG = process.env.NODE_ENV !== 'production';\n\nfunction assert(msg: string, property: unknown): void {\n  if (DEBUG) {\n    if (!property) {\n      throw new Error(msg);\n    }\n  }\n}\n\nfunction maybeUnwrapProxy(content: Content): any {\n  return content;\n}\n\nexport class BufferedChangeset implements IChangeset {\n  constructor(\n    obj: object,\n    public validateFn: ValidatorAction = defaultValidatorFn,\n    public validationMap: ValidatorMap = {},\n    options: Config = {}\n  ) {\n    this[CONTENT] = obj;\n    this[PREVIOUS_CONTENT] = undefined;\n    this[CHANGES] = {};\n    this[VALIDATOR] = validateFn;\n    this[OPTIONS] = pureAssign(defaultOptions, JSON.parse(JSON.stringify(options)));\n    this[RUNNING_VALIDATIONS] = {};\n\n    let validatorMapKeys = this.validationMap ? keys(this.validationMap as object) : [];\n\n    if (this[OPTIONS].initValidate && validatorMapKeys.length > 0) {\n      let errors = this._collectErrors();\n\n      this[ERRORS] = errors;\n      this[ERRORS_CACHE] = errors;\n    } else {\n      this[ERRORS] = {};\n      this[ERRORS_CACHE] = {};\n    }\n  }\n\n  /**\n   * Any property that is not one of the getter/setter/methods on the\n   * BufferedProxy instance. The value type is `unknown` in order to avoid\n   * having to predefine key/value pairs of the correct types in the target\n   * object. Setting the index signature to `[key: string]: T[K]` would allow us\n   * to typecheck the value that is set on the proxy. However, no\n   * getters/setters/methods can be added to the class. This is the tradeoff\n   * we make for this particular design pattern (class based BufferedProxy).\n   */\n  [key: string]: unknown;\n  [CONTENT]: object;\n  [PREVIOUS_CONTENT]: object | undefined;\n  [CHANGES]: Changes;\n  [ERRORS]: Errors<any>;\n  [ERRORS_CACHE]: Errors<any>;\n  [VALIDATOR]: ValidatorAction;\n  [OPTIONS]: Config;\n  [RUNNING_VALIDATIONS]: Record<string, any>;\n\n  __changeset__ = CHANGESET;\n\n  _eventedNotifiers = {};\n\n  on(eventName: string, callback: (key: string) => unknown): INotifier {\n    const notifier = notifierForEvent(this, eventName);\n    return notifier.addListener(callback);\n  }\n\n  off(eventName: string, callback: (key: string) => unknown): INotifier {\n    const notifier = notifierForEvent(this, eventName);\n    return notifier.removeListener(callback);\n  }\n\n  trigger(eventName: string, ...args: any[]): void {\n    const notifier = notifierForEvent(this, eventName);\n    if (notifier) {\n      notifier.trigger(...args);\n    }\n  }\n\n  /**\n   * @property isObject\n   * @override\n   */\n  isObject = isObject;\n\n  /**\n   * @property maybeUnwrapProxy\n   * @override\n   */\n  maybeUnwrapProxy = maybeUnwrapProxy;\n\n  /**\n   * @property setDeep\n   * @override\n   */\n  setDeep = setDeep;\n\n  /**\n   * @property getDeep\n   * @override\n   */\n  getDeep = getDeep;\n\n  /**\n   * @property mergeDeep\n   * @override\n   */\n  mergeDeep = mergeDeep;\n\n  /**\n   * @property safeGet\n   * @override\n   */\n  safeGet(obj: any, key: string) {\n    return obj[key];\n  }\n\n  /**\n   * @property safeSet\n   * @override\n   */\n  safeSet(obj: any, key: string, value: unknown) {\n    return (obj[key] = value);\n  }\n\n  get _bareChanges() {\n    let obj = this[CHANGES];\n\n    return getKeyValues(obj).reduce((newObj: { [key: string]: any }, { key, value }) => {\n      newObj[key] = value;\n      return newObj;\n    }, Object.create(null));\n  }\n\n  /**\n   * @property changes\n   * @type {Array}\n   */\n  get changes() {\n    let obj = this[CHANGES];\n\n    // [{ key, value }, ...]\n    return getKeyValues(obj);\n  }\n\n  /**\n   * @property errors\n   * @type {Array}\n   */\n  get errors() {\n    let obj = this[ERRORS];\n\n    // [{ key, validation, value }, ...]\n    return getKeyErrorValues(obj);\n  }\n\n  get change() {\n    let obj: Changes = this[CHANGES];\n    if (hasChanges(this[CHANGES])) {\n      return normalizeObject(obj);\n    }\n\n    return {};\n  }\n\n  get error() {\n    return this[ERRORS];\n  }\n\n  get data() {\n    return this[CONTENT];\n  }\n\n  /**\n   * @property isValid\n   * @type {Array}\n   */\n  get isValid() {\n    return getKeyErrorValues(this[ERRORS]).length === 0;\n  }\n  /**\n   * @property isPristine\n   * @type {Boolean}\n   */\n  get isPristine() {\n    let validationKeys = Object.keys(this[CHANGES]);\n    const userChangesetKeys: string[] | undefined = this[OPTIONS].changesetKeys;\n    if (Array.isArray(userChangesetKeys) && userChangesetKeys.length) {\n      validationKeys = validationKeys.filter((k) => userChangesetKeys.includes(k));\n    }\n\n    if (validationKeys.length === 0) {\n      return true;\n    }\n\n    return !hasChanges(this[CHANGES]);\n  }\n  /**\n   * @property isInvalid\n   * @type {Boolean}\n   */\n  get isInvalid() {\n    return !this.isValid;\n  }\n  /**\n   * @property isDirty\n   * @type {Boolean}\n   */\n  get isDirty() {\n    return !this.isPristine;\n  }\n\n  /**\n   * Stores change on the changeset.\n   * This approximately works just like the Ember API\n   *\n   * @method setUnknownProperty\n   */\n  setUnknownProperty<T>(key: string, value: T): void {\n    let config: Config = this[OPTIONS];\n    let changesetKeys = config.changesetKeys;\n    if (Array.isArray(changesetKeys) && changesetKeys.length > 0) {\n      const hasKey = changesetKeys.find((chKey) => key.match(chKey));\n      if (!hasKey) {\n        return;\n      }\n    }\n\n    let content: Content = this[CONTENT];\n    let oldValue = this.safeGet(content, key);\n\n    let skipValidate: boolean | undefined = config.skipValidate;\n    if (skipValidate) {\n      this._setProperty({ key, value, oldValue });\n      this._handleValidation(true, { key, value });\n      return;\n    }\n\n    this._setProperty({ key, value, oldValue });\n    this._validateKey(key, value);\n  }\n\n  /**\n   * String representation for the changeset.\n   */\n  get [Symbol.toStringTag](): string {\n    let normalisedContent: object = pureAssign(this[CONTENT], {});\n    return `changeset:${normalisedContent.toString()}`;\n  }\n\n  /**\n   * String representation for the changeset.\n   */\n  toString(): string {\n    let normalisedContent: object = pureAssign(this[CONTENT], {});\n    return `changeset:${normalisedContent.toString()}`;\n  }\n\n  /**\n   * Provides a function to run before emitting changes to the model. The\n   * callback function must return a hash in the same shape:\n   *\n   * ```\n   * changeset\n   *   .prepare((changes) => {\n   *     let modified = {};\n   *\n   *     for (let key in changes) {\n   *       modified[underscore(key)] = changes[key];\n   *     }\n   *\n   *    return modified; // { first_name: \"Jim\", last_name: \"Bob\" }\n   *  })\n   *  .execute(); // execute the changes\n   * ```\n   *\n   * @method prepare\n   */\n  prepare(prepareChangesFn: PrepareChangesFn): this {\n    let changes: { [s: string]: any } = this._bareChanges;\n    let preparedChanges = prepareChangesFn(changes);\n\n    assert('Callback to `changeset.prepare` must return an object', this.isObject(preparedChanges));\n\n    let newObj: Changes = {};\n    if (this.isObject(preparedChanges)) {\n      let newChanges: Changes = keys(preparedChanges as Record<string, any>).reduce(\n        (newObj: Changes, key: keyof Changes) => {\n          newObj[key] = new Change((preparedChanges as Record<string, any>)[key]);\n          return newObj;\n        },\n        newObj\n      );\n\n      // @tracked\n      this[CHANGES] = newChanges;\n    }\n\n    return this;\n  }\n\n  /**\n   * Executes the changeset if in a valid state.\n   *\n   * @method execute\n   */\n  execute(): this {\n    let oldContent;\n    if (this.isValid && this.isDirty) {\n      let content: Content = this[CONTENT];\n      let changes: Changes = this[CHANGES];\n\n      // keep old values in case of error and we want to rollback\n      oldContent = buildOldValues(content, this.changes, this.getDeep);\n\n      // we want mutation on original object\n      // @tracked\n      this[CONTENT] = this.mergeDeep(content, changes);\n    }\n\n    // trigger any registered callbacks by same keyword as method name\n    this.trigger('execute');\n\n    this[CHANGES] = {};\n    this[PREVIOUS_CONTENT] = oldContent;\n\n    return this;\n  }\n\n  unexecute(): this {\n    if (this[PREVIOUS_CONTENT]) {\n      this[CONTENT] = this.mergeDeep(this[CONTENT], this[PREVIOUS_CONTENT], {\n        safeGet: this.safeGet,\n        safeSet: this.safeSet\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Executes the changeset and saves the underlying content.\n   *\n   * @method save\n   * @param {Object} options optional object to pass to content save method\n   */\n  async save(options?: object): Promise<IChangeset | any> {\n    let content: Content = this[CONTENT];\n    let savePromise: any | Promise<BufferedChangeset | any> = Promise.resolve(this);\n    this.execute();\n\n    if (typeof content.save === 'function') {\n      savePromise = content.save(options);\n    } else if (typeof this.safeGet(content, 'save') === 'function') {\n      // we might be getting this off a proxy object.  For example, when a\n      // belongsTo relationship (a proxy on the parent model)\n      // another way would be content(belongsTo).content.save\n      let maybePromise = this.maybeUnwrapProxy(content).save();\n      if (maybePromise) {\n        savePromise = maybePromise;\n      }\n    }\n\n    try {\n      const result = await savePromise;\n\n      // cleanup changeset\n      this.rollback();\n\n      return result;\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  /**\n   * Merges 2 valid changesets and returns a new changeset. Both changesets\n   * must point to the same underlying object. The changeset target is the\n   * origin. For example:\n   *\n   * ```\n   * let changesetA = new Changeset(user, validatorFn);\n   * let changesetB = new Changeset(user, validatorFn);\n   * changesetA.set('firstName', 'Jim');\n   * changesetB.set('firstName', 'Jimmy');\n   * changesetB.set('lastName', 'Fallon');\n   * let changesetC = changesetA.merge(changesetB);\n   * changesetC.execute();\n   * user.get('firstName'); // \"Jimmy\"\n   * user.get('lastName'); // \"Fallon\"\n   * ```\n   *\n   * @method merge\n   */\n  merge(changeset: this): this {\n    let content: Content = this[CONTENT];\n    assert('Cannot merge with a non-changeset', isChangeset(changeset));\n    assert('Cannot merge with a changeset of different content', changeset[CONTENT] === content);\n\n    if (this.isPristine && changeset.isPristine) {\n      return this;\n    }\n\n    let c1: Changes = this[CHANGES];\n    let c2: Changes = changeset[CHANGES];\n    let e1: Errors<any> = this[ERRORS];\n    let e2: Errors<any> = changeset[ERRORS];\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    let newChangeset: any = new ValidatedChangeset(content, this[VALIDATOR]); // ChangesetDef\n    let newErrors: Errors<any> = objectWithout(keys(c2), e1);\n    let newChanges: Changes = objectWithout(keys(e2), c1);\n    let mergedErrors: Errors<any> = mergeNested(newErrors, e2);\n    let mergedChanges: Changes = mergeNested(newChanges, c2);\n\n    newChangeset[ERRORS] = mergedErrors;\n    newChangeset[CHANGES] = mergedChanges;\n    newChangeset._notifyVirtualProperties();\n    return newChangeset;\n  }\n\n  /**\n   * Returns the changeset to its pristine state, and discards changes and\n   * errors.\n   *\n   * @method rollback\n   */\n  rollback(): this {\n    // Get keys before reset.\n    let keys = this._rollbackKeys();\n\n    // Reset.\n    this[CHANGES] = {};\n    this[ERRORS] = {};\n    this[ERRORS_CACHE] = {};\n    this._notifyVirtualProperties(keys);\n\n    this.trigger(AFTER_ROLLBACK_EVENT);\n    return this;\n  }\n\n  /**\n   * Discards any errors, keeping only valid changes.\n   *\n   * @public\n   * @chainable\n   * @method rollbackInvalid\n   * @param {String} key optional key to rollback invalid values\n   * @return {Changeset}\n   */\n  rollbackInvalid(key: string | void): this {\n    let errorKeys = this.errors.map(({ key }) => key);\n\n    if (key) {\n      this._notifyVirtualProperties([key]);\n      // @tracked\n      this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n      this[ERRORS_CACHE] = this[ERRORS];\n      if (errorKeys.indexOf(key) > -1) {\n        this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n      }\n    } else {\n      this._notifyVirtualProperties();\n      this[ERRORS] = {};\n      this[ERRORS_CACHE] = this[ERRORS];\n\n      // if on CHANGES hash, rollback those as well\n      errorKeys.forEach((errKey) => {\n        this[CHANGES] = this._deleteKey(CHANGES, errKey) as Changes;\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Discards changes/errors for the specified properly only.\n   *\n   * @public\n   * @chainable\n   * @method rollbackProperty\n   * @param {String} key key to delete off of changes and errors\n   * @return {Changeset}\n   */\n  rollbackProperty(key: string): this {\n    // @tracked\n    this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n    // @tracked\n    this[ERRORS] = this._deleteKey(ERRORS, key) as Errors<any>;\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    return this;\n  }\n\n  /**\n   * Validates the changeset immediately against the validationMap passed in.\n   * If no key is passed into this method, it will validate all fields on the\n   * validationMap and set errors accordingly. Will throw an error if no\n   * validationMap is present.\n   *\n   * @method validate\n   */\n  async validate(...validationKeys: string[]): Promise<any> {\n    if (keys(this.validationMap as object).length === 0 && !validationKeys.length) {\n      return Promise.resolve(null);\n    }\n\n    validationKeys =\n      validationKeys.length > 0\n        ? validationKeys\n        : keys(flattenValidations(this.validationMap as object));\n\n    let maybePromise = validationKeys.map((key) => {\n      const value: any = this[key];\n      const resolvedValue = value instanceof ObjectTreeNode ? value.unwrap() : value;\n      return this._validateKey(key, resolvedValue);\n    });\n\n    return Promise.all(maybePromise);\n  }\n\n  /**\n   * Manually add an error to the changeset. If there is an existing\n   * error or change for `key`, it will be overwritten.\n   *\n   * @method addError\n   */\n  addError<T>(key: string, error: IErr<T> | ValidationErr) {\n    // Construct new `Err` instance.\n    let newError;\n\n    const isIErr = <T>(error: unknown): error is IErr<T> =>\n      this.isObject(error) && !Array.isArray(error);\n    if (isIErr(error)) {\n      assert('Error must have value.', error.hasOwnProperty('value') || error.value !== undefined);\n      assert('Error must have validation.', error.hasOwnProperty('validation'));\n      newError = new Err(error.value, error.validation);\n    } else {\n      let value = this[key];\n      newError = new Err(value, error as ValidationErr);\n    }\n\n    // Add `key` to errors map.\n    let errors: Errors<any> = this[ERRORS];\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key, newError, { safeSet: this.safeSet });\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    // Return passed-in `error`.\n    return error;\n  }\n\n  /**\n   * Manually push multiple errors to the changeset as an array.\n   * key maybe in form 'name.short' so need to go deep\n   *\n   * @method pushErrors\n   */\n  pushErrors(key: string, ...newErrors: string[] | ValidationErr[]): IErr<any> {\n    let errors: Errors<any> = this[ERRORS];\n    let existingError: IErr<any> | Err = this.getDeep(errors, key) || new Err(null, []);\n    let validation: ValidationErr | ValidationErr[] = existingError.validation;\n    let value: any = this[key];\n\n    if (!Array.isArray(validation) && Boolean(validation)) {\n      existingError.validation = [validation];\n    }\n\n    let v = existingError.validation;\n    validation = [...v, ...newErrors];\n    let newError = new Err(value, validation);\n    // @tracked\n    this[ERRORS] = this.setDeep(errors, key as string, newError, { safeSet: this.safeSet });\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    return { value, validation };\n  }\n\n  /**\n   * Creates a snapshot of the changeset's errors and changes.\n   *\n   * @method snapshot\n   */\n  snapshot(): Snapshot {\n    let changes: Changes = this[CHANGES];\n    let errors: Errors<any> = this[ERRORS];\n\n    return {\n      changes: this.getChangesForSnapshot(changes),\n\n      errors: keys(errors).reduce((newObj: Errors<any>, key: keyof Errors<any>) => {\n        let e = errors[key];\n        newObj[key] = { value: e.value, validation: e.validation };\n        return newObj;\n      }, {})\n    };\n  }\n\n  private getChangesForSnapshot(changes: Changes) {\n    return keys(changes).reduce((newObj: Changes, key: keyof Changes) => {\n      newObj[key] = isChange(changes[key])\n        ? getChangeValue(changes[key])\n        : this.getChangesForSnapshot(changes[key]);\n      return newObj;\n    }, {});\n  }\n\n  /**\n   * Restores a snapshot of changes and errors. This overrides existing\n   * changes and errors.\n   *\n   * @method restore\n   */\n  restore({ changes, errors }: Snapshot): this {\n    let newChanges: Changes = this.getChangesFromSnapshot(changes);\n\n    let newErrors: Errors<any> = keys(errors).reduce((newObj: Errors<any>, key: keyof Changes) => {\n      let e: IErr<any> = errors[key];\n      newObj[key] = new Err(e.value, e.validation);\n      return newObj;\n    }, {});\n\n    // @tracked\n    this[CHANGES] = newChanges;\n    // @tracked\n    this[ERRORS] = newErrors;\n    this[ERRORS_CACHE] = this[ERRORS];\n\n    this._notifyVirtualProperties();\n    return this;\n  }\n\n  private getChangesFromSnapshot(changes: Changes) {\n    return keys(changes).reduce((newObj, key) => {\n      newObj[key] = this.getChangeForProp(changes[key]);\n      return newObj;\n    }, {} as Changes);\n  }\n\n  private getChangeForProp(value: any) {\n    if (!isObject(value)) {\n      return new Change(value);\n    }\n\n    return keys(value).reduce((newObj, key) => {\n      newObj[key] = this.getChangeForProp(value[key]);\n      return newObj;\n    }, {} as Changes);\n  }\n\n  /**\n   * Unlike `Ecto.Changeset.cast`, `cast` will take allowed keys and\n   * remove unwanted keys off of the changeset. For example, this method\n   * can be used to only allow specified changes through prior to saving.\n   *\n   * @method cast\n   */\n  cast(allowed: string[] = []): this {\n    let changes: Changes = this[CHANGES];\n\n    if (Array.isArray(allowed) && allowed.length === 0) {\n      return this;\n    }\n\n    let changeKeys: string[] = keys(changes);\n    let validKeys = changeKeys.filter((key: string) => allowed.includes(key));\n    let casted = take(changes, validKeys);\n    // @tracked\n    this[CHANGES] = casted;\n    return this;\n  }\n\n  /**\n   * Checks to see if async validator for a given key has not resolved.\n   * If no key is provided it will check to see if any async validator is running.\n   *\n   * @method isValidating\n   */\n  isValidating(key?: string | void): boolean {\n    let runningValidations: RunningValidations = this[RUNNING_VALIDATIONS];\n    let ks: string[] = keys(runningValidations);\n    if (key) {\n      return ks.includes(key);\n    }\n    return ks.length > 0;\n  }\n\n  /**\n   * Validates a specific key\n   *\n   * @method _validateKey\n   * @private\n   */\n  _validateKey<T>(\n    key: string,\n    value: T\n  ): Promise<ValidationResult | T | IErr<T>> | T | IErr<T> | ValidationResult {\n    let content: Content = this[CONTENT];\n    let oldValue: any = this.getDeep(content, key);\n    let validation: ValidationResult | Promise<ValidationResult> = this._validate(\n      key,\n      value,\n      oldValue\n    );\n\n    this.trigger(BEFORE_VALIDATION_EVENT, key);\n\n    // TODO: Address case when Promise is rejected.\n    if (isPromise(validation)) {\n      this._setIsValidating(key, validation as Promise<ValidationResult>);\n\n      let running: RunningValidations = this[RUNNING_VALIDATIONS];\n      let promises = Object.entries(running);\n\n      return Promise.all(promises).then(() => {\n        return (validation as Promise<ValidationResult>)\n          .then((resolvedValidation: ValidationResult) => {\n            delete running[key];\n\n            return this._handleValidation(resolvedValidation, { key, value });\n          })\n          .then((result) => {\n            this.trigger(AFTER_VALIDATION_EVENT, key);\n            return result;\n          });\n      });\n    }\n\n    let result = this._handleValidation(validation as ValidationResult, { key, value });\n\n    this.trigger(AFTER_VALIDATION_EVENT, key);\n\n    return result;\n  }\n\n  /**\n   * Takes resolved validation and adds an error or simply returns the value\n   *\n   * @method _handleValidation\n   * @private\n   */\n  _handleValidation<T>(\n    validation: ValidationResult,\n    { key, value }: NewProperty<T>\n  ): T | IErr<T> | ValidationErr {\n    // Happy path: remove `key` from error map.\n    // @tracked\n    // ERRORS_CACHE to avoid backtracking Ember assertion.\n    this[ERRORS] = this._deleteKey(ERRORS_CACHE, key) as Errors<any>;\n\n    // Error case.\n    if (!this._isValidResult(validation)) {\n      return this.addError(key, { value, validation } as IErr<T>);\n    }\n\n    return value;\n  }\n\n  /**\n   * runs the validator with the key and value\n   *\n   * @method _validate\n   * @private\n   */\n  _validate(\n    key: string,\n    newValue: unknown,\n    oldValue: unknown\n  ): ValidationResult | Promise<ValidationResult> {\n    let validator: ValidatorAction = this[VALIDATOR];\n    let content: Content = this[CONTENT];\n\n    if (typeof validator === 'function') {\n      let validationResult = validator({\n        key,\n        newValue,\n        oldValue,\n        changes: this.change,\n        content\n      });\n\n      if (validationResult === undefined) {\n        // no validator function found for key\n        return true;\n      }\n\n      return validationResult;\n    }\n\n    return true;\n  }\n\n  /**\n   * Sets property on the changeset.\n   */\n  _setProperty<T>({ key, value, oldValue }: NewProperty<T>): void {\n    let changes: Changes = this[CHANGES];\n\n    // Happy path: update change map.\n    if (!isEqual(value, oldValue) || oldValue === undefined) {\n      // @tracked\n      let result: Changes = this.setDeep(changes, key, new Change(value), {\n        safeSet: this.safeSet\n      });\n\n      this[CHANGES] = result;\n    } else if (keyInObject(changes, key)) {\n      // @tracked\n      // remove key if setting back to original\n      this[CHANGES] = this._deleteKey(CHANGES, key) as Changes;\n    }\n  }\n\n  /**\n   * Increment or decrement the number of running validations for a\n   * given key.\n   */\n  _setIsValidating(key: string, promise: Promise<ValidationResult>): void {\n    let running: RunningValidations = this[RUNNING_VALIDATIONS];\n    this.setDeep(running, key, promise);\n  }\n\n  /**\n   * Notifies virtual properties set on the changeset of a change.\n   * You can specify which keys are notified by passing in an array.\n   *\n   * @private\n   * @param {Array} keys\n   * @return {Void}\n   */\n  _notifyVirtualProperties(keys?: string[]): string[] | undefined {\n    if (!keys) {\n      keys = this._rollbackKeys();\n    }\n\n    return keys;\n  }\n\n  /**\n   * Gets the changes and error keys.\n   */\n  _rollbackKeys(): string[] {\n    let changes: Changes = this[CHANGES];\n    let errors: Errors<any> = this[ERRORS];\n    return [...new Set([...keys(changes), ...keys(errors)])];\n  }\n\n  /**\n   * Deletes a key off an object and notifies observers.\n   */\n  _deleteKey(objName: string, key = ''): InternalMap {\n    let obj = this[objName] as InternalMap;\n    let keys = key.split('.');\n\n    if (keys.length === 1 && obj.hasOwnProperty(key)) {\n      delete obj[key];\n    } else if (obj[keys[0]]) {\n      let [base, ...remaining] = keys;\n      let previousNode: { [key: string]: any } = obj;\n      let currentNode: any = obj[base];\n      let currentKey: string | undefined = base;\n\n      // find leaf and delete from map\n      while (this.isObject(currentNode) && currentKey) {\n        let curr: { [key: string]: unknown } = currentNode;\n        if (isChange(curr) || typeof curr.value !== 'undefined' || curr.validation) {\n          delete previousNode[currentKey];\n        }\n\n        currentKey = remaining.shift();\n        previousNode = currentNode;\n        if (currentKey) {\n          currentNode = currentNode[currentKey];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  _collectErrors(): Errors<any> {\n    let validationKeys = keys(flattenValidations(this.validationMap as object));\n\n    return validationKeys.reduce((acc: Errors<any>, key: string) => {\n      let content: Content = this[CONTENT];\n      let value: any = this.getDeep(content, key);\n      let resolvedValue = value instanceof ObjectTreeNode ? value.unwrap() : value;\n\n      let result: ValidationResult = this._validate(key, resolvedValue, null) as ValidationResult;\n\n      if (!this._isValidResult(result)) {\n        let errorResult = result as ValidationErr;\n        let validationError = new Err(value, errorResult);\n\n        this.setDeep(acc, key, validationError, { safeSet: this.safeSet });\n      }\n\n      return acc;\n    }, {});\n  }\n\n  _isValidResult(result: ValidationResult): boolean {\n    return result === true || (Array.isArray(result) && result.length === 1 && result[0] === true);\n  }\n\n  get(key: string): any {\n    // 'person'\n    // 'person.username'\n    let [baseKey, ...remaining] = key.split('.');\n    let changes: Changes = this[CHANGES];\n    let content: Content = this[CONTENT];\n    if (Object.prototype.hasOwnProperty.call(changes, baseKey)) {\n      const changesValue = this.getDeep(changes, key);\n      const isObject = this.isObject(changesValue);\n\n      if (!isObject && changesValue !== undefined) {\n        // if safeGet returns a primitive, then go ahead return\n        return changesValue;\n      }\n    }\n    // At this point, we may have a changes object, a dot separated key, or a need to access the `key`\n    // on `this` or `content`\n    if (Object.prototype.hasOwnProperty.call(changes, baseKey) && hasChanges(changes)) {\n      let baseChanges = changes[baseKey];\n\n      // 'user.name'\n      const normalizedBaseChanges = normalizeObject(baseChanges);\n      if (this.isObject(normalizedBaseChanges)) {\n        const result = this.maybeUnwrapProxy(\n          this.getDeep(normalizedBaseChanges, remaining.join('.'))\n        );\n\n        // need to do this inside of Change object\n        // basically anything inside of a Change object that is undefined means it was removed\n        if (\n          typeof result === 'undefined' &&\n          pathInChanges(changes, key, this.safeGet) &&\n          !hasKey(changes, key, this.safeGet) &&\n          this.getDeep(content, key)\n        ) {\n          return;\n        }\n\n        if (this.isObject(result)) {\n          if (isChange(result)) {\n            return getChangeValue(result);\n          }\n\n          const baseContent = this.safeGet(content, baseKey) || {};\n          const subContent = this.getDeep(baseContent, remaining.join('.'));\n          const subChanges = getSubObject(changes, key);\n          // give back an object that can further retrieve changes and/or content\n          const tree = new ObjectTreeNode(subChanges, subContent, this.getDeep, this.isObject);\n          return tree.proxy;\n        } else if (typeof result !== 'undefined') {\n          return result;\n        }\n      }\n\n      // this comes after the isObject check to ensure we don't lose remaining keys\n      if (isChange(baseChanges) && remaining.length === 0) {\n        return getChangeValue(baseChanges);\n      }\n    }\n\n    // return getters/setters/methods on BufferedProxy instance\n    if (baseKey in this || key in this) {\n      return this.getDeep(this, key);\n    }\n\n    const subContent = this.maybeUnwrapProxy(this.getDeep(content, key));\n    if (this.isObject(subContent)) {\n      let subChanges = this.getDeep(changes, key);\n      if (!subChanges) {\n        // if no changes, we need to add the path to the existing changes (mutate)\n        // so further access to nested keys works\n        subChanges = this.getDeep(this.setDeep(changes, key, {}), key);\n      }\n\n      // may still access a value on the changes or content objects\n      const tree = new ObjectTreeNode(subChanges, subContent, this.getDeep, this.isObject);\n      return tree.proxy;\n    } else if (Array.isArray(subContent)) {\n      let subChanges = this.getDeep(changes, key);\n      if (!subChanges) {\n        // return array of contents. Dont need to worry about further access sibling keys in array case\n        return subContent;\n      }\n\n      if (isObject(subChanges)) {\n        if (isObject(subContent)) {\n          subChanges = normalizeObject(subChanges, this.isObject);\n          return { ...subContent, ...subChanges };\n        } else if (Array.isArray(subContent)) {\n          subChanges = normalizeObject(subChanges, this.isObject);\n\n          return objectToArray(mergeDeep(arrayToObject(subContent), subChanges));\n        }\n      }\n\n      return subChanges;\n    }\n\n    return subContent;\n  }\n\n  set<T>(key: string, value: T): void {\n    if (this.hasOwnProperty(key) || keyInObject(this, key)) {\n      this[key] = value;\n    } else {\n      this.setUnknownProperty(key, value);\n    }\n  }\n}\n\n/**\n * Creates new changesets.\n */\nexport function changeset(\n  obj: object,\n  validateFn?: ValidatorAction,\n  validationMap?: ValidatorMap | null | undefined,\n  options?: Config\n): BufferedChangeset {\n  return new BufferedChangeset(obj, validateFn, validationMap, options);\n}\n\ntype T20 = InstanceType<typeof BufferedChangeset>;\n\nexport class ValidatedChangeset {\n  /**\n   * Changeset factory class if you need to extend\n   *\n   * @class ValidatedChangeset\n   * @constructor\n   */\n  constructor(\n    obj: object,\n    validateFn?: ValidatorAction,\n    validationMap?: ValidatorMap | null | undefined,\n    options?: Config\n  ) {\n    const c: BufferedChangeset = changeset(obj, validateFn, validationMap, options);\n\n    return new Proxy(c, {\n      get(targetBuffer, key /*, receiver*/) {\n        const res = targetBuffer.get(key.toString());\n        return res;\n      },\n\n      set(targetBuffer, key, value /*, receiver*/) {\n        targetBuffer.set(key.toString(), value);\n        return true;\n      }\n    }) as T20;\n  }\n}\n\nexport function Changeset(\n  obj: object,\n  validateFn?: ValidatorAction,\n  validationMap?: ValidatorMap | null | undefined,\n  options?: Config\n): BufferedChangeset {\n  const c: BufferedChangeset = changeset(obj, validateFn, validationMap, options);\n\n  return new Proxy(c, {\n    get(targetBuffer, key /*, receiver*/) {\n      const res = targetBuffer.get(key.toString());\n      return res;\n    },\n\n    set(targetBuffer, key, value /*, receiver*/) {\n      targetBuffer.set(key.toString(), value);\n      return true;\n    }\n  });\n}\n\n// determine if two values are equal\nfunction isEqual(v1: unknown, v2: unknown) {\n  if (v1 instanceof Date && v2 instanceof Date) {\n    return v1.getTime() === v2.getTime();\n  }\n\n  return v1 === v2;\n}\n"],"names":["get","isObjectFn","isObject","keys","CONTENT","PREVIOUS_CONTENT","CHANGES","ERRORS","ERRORS_CACHE","OPTIONS","AFTER_ROLLBACK_EVENT","DEBUG","assert","maybeUnwrapProxy","ValidatedChangeset","isEqual","changeset","Changeset"],"mappings":"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"}